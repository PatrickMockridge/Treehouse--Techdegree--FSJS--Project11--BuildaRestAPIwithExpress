{"version":3,"sources":["webpack:///./app.js","webpack:///./controllers/index.js","webpack:///./controllers/courses.js","webpack:///./controllers/course-detail.js","webpack:///./controllers/course-edit.js","webpack:///./controllers/mock-data-alert.js","webpack:///./controllers/sign-in.js","webpack:///./controllers/sign-out.js","webpack:///./controllers/sign-up.js","webpack:///./data/index.js","webpack:///./data/courses.js","webpack:///./data/users.js","webpack:///./directives/index.js","webpack:///./directives/markdown.js","webpack:///./directives/rating.js","webpack:///./directives/user-nav.js","webpack:///./directives/validation-errors.js","webpack:///./filters/index.js","webpack:///./filters/line-returns-to-paragraphs.js","webpack:///./init/index.js","webpack:///./init/config.js","webpack:///./providers/index.js","webpack:///./providers/data-service.js","webpack:///./providers/data.js","webpack:///./providers/mock-data.js","webpack:///./services/index.js","webpack:///./services/auth.js","webpack:///./services/error-handler.js","webpack:///./services/http-interceptor.js","webpack:///./services/session.js","webpack:///./services/showdown.js","webpack:///./services/toast.js","webpack:///./services/validation.js"],"names":[],"mappings":";;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;;;;;;;ACnBA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,mD;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC5GA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACzIA;;AAEA;AACA;;AAEA,iD;AACA;;AAEA;;;;;;;ACRA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACjCA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACPA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,YAAW;AACX,QAAO;AACP;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AChDA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACNA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;AACA,MAAK;AACL,yBAAwB,0BAA0B;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;;;;;;;AC7SA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;AACA,MAAK;AACL,yBAAwB,0BAA0B;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;;;;;;;AC5HA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;AC7BA;;AAEA;;AAEA;;;;;;;ACJA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACRA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;;;;;;;AChDA;;AAEA;;AAEA;;;;;;;ACJA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,Q;AACA,IAAG;AACH;;AAEA;;;;;;;AClBA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACtCA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC7DA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AChBA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACxBA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACfA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC1CA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB,sCAAsC;AAC5D;AACA;;AAEA","file":"app.bundle.js","sourcesContent":["'use strict';\n\nvar angular = require('angular');\n\nangular.module('app', [\n  require('angular-route'),\n  require('angular-sanitize')\n]).run(function($rootScope, $location, sessionService) {\n  // wire up the route change start handler\n  // in order to determine if the requested route requires a user login\n  $rootScope.$on('$routeChangeStart', function(event, next, current) {\n    // if the \"require login\" property is set to \"true\"\n    // and we don't have an authenticated user...\n    // then send the user to the \"Sign In\" view.\n    if (next.requireLogin && !sessionService.currentUser.isAuthenticated) {\n      $location.path('/signin');\n      event.preventDefault();\n    }\n  });\n});\n\nrequire('./controllers');\nrequire('./data');\nrequire('./directives');\nrequire('./filters');\nrequire('./init');\nrequire('./providers');\nrequire('./services');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\nvar app = angular.module('app');\n\napp.controller('CoursesController', require('./courses'));\napp.controller('CourseDetailController', require('./course-detail'));\napp.controller('CourseEditController', require('./course-edit'));\napp.controller('MockDataAlertController', require('./mock-data-alert'));\napp.controller('SignInController', require('./sign-in'));\napp.controller('SignOutController', require('./sign-out'));\napp.controller('SignUpController', require('./sign-up'));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/index.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nfunction CoursesController(dataService, errorHandlerService, sessionService, $log) {\n\n  var _this = this;\n\n  _this.courses = [];\n  _this.userIsAuthenticated = sessionService.currentUser.isAuthenticated;\n  \n  dataService.getCourses().then(\n    function(response) {\n      var courses = response.data.data;\n      _this.courses = courses;\n    },\n    function(response) {\n      errorHandlerService.handleError(response);\n    });\n}\n\nmodule.exports = CoursesController;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/courses.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\n\nfunction CourseDetailController(dataService, errorHandlerService, sessionService,\n  $anchorScroll, $location, $log, $routeParams) {\n\n  var _this = this;\n\n  _this.courseId = $routeParams.id;\n  _this.course = {};\n  _this.userReview = {};\n  _this.numberOfReviewsDisplayText = 0;\n  _this.userReviewValidationErrors = {};\n  _this.hasUserReviewValidationErrors = false;\n  _this.userIsAuthenticated = sessionService.currentUser.isAuthenticated;\n  _this.currentUserId = sessionService.currentUser._id;\n  _this.userCanEdit = false;\n\n  init();\n\n  _this.postReview = function() {\n    dataService.createReview(_this.courseId, _this.userReview).then(\n      function() {\n        getCourse();\n        resetUserReview();\n        resetUserReviewValidationErrors();\n      },\n      function(response) {\n        errorHandlerService.handleError(response, displayUserReviewValidationErrors);\n      });\n  };\n\n  _this.canPostReview = function() {\n    // only allow the user to post a review if...\n    // 1) we have an authenticated user\n    // 2) they're not the course owner (you can't review your own course)\n    return (_this.userIsAuthenticated && this.course && this.course.user && \n      _this.course.user._id !== _this.currentUserId);\n  };\n\n  _this.canDeleteReview = function(review) {\n    // only allow a review to be delete if...\n    // 1) we have an authenticated user\n    // 2) the review's user is the current user or the course owner is the current user\n    return (_this.userIsAuthenticated &&\n      (review.user._id === _this.currentUserId || _this.course.user._id === _this.currentUserId));\n  };\n\n  _this.deleteReview = function(reviewId) {\n    dataService.deleteReview(_this.courseId, reviewId).then(\n      function() {\n        getCourse();\n      },\n      function(response) {\n        errorHandlerService.handleError(response);        \n      });\n  };\n\n  _this.scrollTo = function(id) {\n    $location.hash(id);\n    $anchorScroll();\n  };\n\n  function init() {\n    getCourse();\n    resetUserReview();\n  }\n\n  function getCourse() {\n    dataService.getCourse(_this.courseId).then(\n      function(response) {\n        var course = response.data.data[0];\n        _this.course = course;\n\n        // only allow the current user to edit their own courses\n        var currentUser = sessionService.currentUser;\n        _this.userCanEdit = (currentUser.isAuthenticated && course.user._id === currentUser._id);\n\n        updateNumberOfReviewsDisplayText(course.reviews);\n      },\n      function(response) {\n        errorHandlerService.handleError(response);\n      });\n  }\n\n  function updateNumberOfReviewsDisplayText(reviews) {\n    _this.numberOfReviewsDisplayText = (reviews.length === 1) ?\n      '1 Review' : reviews.length + ' Reviews';\n  }\n\n  function resetUserReview() {\n    _this.userReview = {\n      rating: 0,\n      review: ''\n    };\n  }\n\n  function displayUserReviewValidationErrors(validationErrors) {\n    _this.userReviewValidationErrors = validationErrors.errors;\n    _this.hasUserReviewValidationErrors = true;\n  }\n\n  function resetUserReviewValidationErrors() {\n    _this.userReviewValidationErrors = {};\n    _this.hasUserReviewValidationErrors = false;\n  }\n\n}\n\nmodule.exports = CourseDetailController;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/course-detail.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nfunction CourseEditController(dataService, errorHandlerService, sessionService, \n  $location, $log, $routeParams) {\n\n  var _this = this;\n\n  _this.courseId = $routeParams.id;\n  _this.course = {};\n  _this.courseTitle = '';\n  _this.validationErrors = {};\n  _this.hasValidationErrors = false;\n\n  _this.saveCourse = function() {\n    var course = _this.course;\n\n    if (_this.courseId) {\n      dataService.updateCourse(course).then(\n        function() {\n          $location.path('/detail/' + _this.courseId);\n        },\n        function(response) {\n          errorHandlerService.handleError(response, displayValidationErrors);\n        });\n    } else {\n      dataService.createCourse(course).then(\n        function() {\n          $location.path('/');\n        },\n        function(response) {\n          errorHandlerService.handleError(response, displayValidationErrors);\n        });\n    }\n  };\n\n  _this.addStep = function(index) {\n    // the step numbers are \"1\" based\n    // so increment the index to determine the new step number\n    var newStepNumber = index + 1;\n\n    // increment the step number for any steps that come after the new step\n    var steps = _this.course.steps;\n    steps.forEach(function(step) {\n      if (step.stepNumber >= newStepNumber) {\n        step.stepNumber++;\n      }\n    });\n\n    // insert the new step\n    steps.splice(index, 0, {\n      stepNumber: newStepNumber,\n      title: '',\n      description: ''\n    });\n  };\n\n  _this.removeStep = function(indexToRemove) {\n    var steps = _this.course.steps;\n\n    // decrement the step numbers\n    // for all steps that come after the step that we are removing\n    steps.forEach(function(step, index) {\n      if (index > indexToRemove) {\n        step.stepNumber--;\n      }\n    });\n\n    // remove the step\n    steps.splice(indexToRemove, 1);\n  };\n\n  init();\n\n  function init() {\n    if (_this.courseId) {\n      getCourse();\n    } else {\n      resetCourse();\n    }\n  }\n\n  function getCourse() {\n    dataService.getCourse(_this.courseId).then(\n      function(response) {\n        var course = response.data.data[0];\n\n        // create a copy so that any changes made\n        // do not affect the underlying in-memory data\n        _this.course = angular.copy(course);\n\n        // set the course title to the original course title\n        // so that when editing the course title the breadcrumb text doesn't change\n        _this.courseTitle = course.title;\n      },\n      function(response) {\n        errorHandlerService.handleError(response);\n      });\n  }\n\n  function resetCourse() {\n    var currentUser = sessionService.currentUser;\n\n    _this.course = {\n      user: {\n        _id: currentUser._id,\n        fullName: currentUser.fullName\n      },\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      steps: [\n        {\n          stepNumber: 1,\n          title: '',\n          description: ''\n        }\n      ],\n      overallRating: 0,\n      reviews: []\n    };\n  }\n\n  function displayValidationErrors(validationErrors) {\n    _this.validationErrors = validationErrors.errors;\n    _this.hasValidationErrors = true;\n  }\n\n  function resetValidationErrors() {\n    _this.validationErrors = {};\n    _this.hasValidationErrors = false;\n  }\n\n}\n\nmodule.exports = CourseEditController;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/course-edit.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict';\n\nfunction MockDataAlertController(constants) {\n  var _this = this;\n  \n  _this.mockDataEnabled = constants.useMockData;  \n}\n\nmodule.exports = MockDataAlertController;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/mock-data-alert.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nfunction SignInController(authService, errorHandlerService, $location, $log) {\n\n  var _this = this;\n\n  _this.emailAddress = '';\n  _this.password = '';\n  _this.validationErrors = {};\n  _this.hasValidationErrors = false;\n\n  _this.signIn = function() {\n    authService.signIn(_this.emailAddress, _this.password).then(\n      function() {\n        $location.path('/');\n      },\n      function(response) {\n        errorHandlerService.handleError(response, displayValidationErrors);\n      });\n  };\n\n  function displayValidationErrors(validationErrors) {\n    _this.validationErrors = validationErrors.errors;\n    _this.hasValidationErrors = true;\n  }\n\n  function resetValidationErrors() {\n    _this.validationErrors = {};\n    _this.hasValidationErrors = false;\n  }\n\n}\n\nmodule.exports = SignInController;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/sign-in.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\n\nfunction SignOutController(authService, $location) {\n  authService.signOut();\n  $location.path('/');\n}\n\nmodule.exports = SignOutController;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/sign-out.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nfunction SignUpController(authService, dataService, errorHandlerService, $location, $log) {\n\n  var _this = this;\n\n  _this.fullName = '';\n  _this.emailAddress = '';\n  _this.password = '';\n  _this.confirmPassword = '';\n  _this.validationErrors = {};\n  _this.hasValidationErrors = false;\n\n  _this.signUp = function() {\n    var user = {\n      fullName: _this.fullName,\n      emailAddress: _this.emailAddress,\n      password: _this.password,\n      confirmPassword: _this.confirmPassword\n    };\n\n    dataService.createUser(user).then(\n      function() {\n        authService.signIn(user.emailAddress, user.password).then(\n          function() {\n            $location.path('/');\n          },\n          function(response) {\n            errorHandlerService.handleError(response, displayValidationErrors);\n          });\n      },\n      function(response) {\n        errorHandlerService.handleError(response, displayValidationErrors);\n      });\n  };\n\n  function displayValidationErrors(validationErrors) {\n    _this.validationErrors = validationErrors.errors;\n    _this.hasValidationErrors = true;\n  }\n\n  function resetValidationErrors() {\n    _this.validationErrors = {};\n    _this.hasValidationErrors = false;\n  }\n\n}\n\nmodule.exports = SignUpController;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/sign-up.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\nvar app = angular.module('app');\n\napp.service('coursesData', require('./courses'));\napp.service('usersData', require('./users'));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./data/index.js\n ** module id = 15\n ** module chunks = 0\n **/","'use strict';\n\nvar _ = require('underscore');\n\nfunction CoursesData(sessionService, validationService, $q) {\n\n  var coursesData = {\n    data: [\n      {\n        _id: 1,\n        user: {\n          _id: 1,\n          fullName: 'Joe Smith'\n        },\n        title: 'Build a Basic Bookcase',\n        description: 'High-end furniture projects are great to dream about. But unless you have a well-equipped shop and some serious woodworking experience to draw on, it can be difficult to turn the dream into a reality.\\n\\nNot every piece of furniture needs to be a museum showpiece, though. Often a simple design does the job just as well and the experience gained in completing it goes a long way toward making the next project even better.\\n\\nOur pine bookcase, for example, features simple construction and it\\'s designed to be built with basic woodworking tools. Yet, the finished project is a worthy and useful addition to any room of the house. While it\\'s meant to rest on the floor, you can convert the bookcase to a wall-mounted storage unit by leaving off the baseboard. You can secure the cabinet to the wall by screwing through the cabinet cleats into the wall studs.\\n\\nWe made the case out of materials available at most building-supply dealers and lumberyards, including 1/2 x 3/4-in. parting strip, 1 x 2, 1 x 4 and 1 x 10 common pine and 1/4-in.-thick lauan plywood. Assembly is quick and easy with glue and nails, and when you\\'re done with construction you have the option of a painted or clear finish.\\n\\nAs for basic tools, you\\'ll need a portable circular saw, hammer, block plane, combination square, tape measure, metal rule, two clamps, nail set and putty knife. Other supplies include glue, nails, sandpaper, wood filler and varnish or paint and shellac.\\n\\nThe specifications that follow will produce a bookcase with overall dimensions of 10 3/4 in. deep x 34 in. wide x 48 in. tall. While the depth of the case is directly tied to the 1 x 10 stock, you can vary the height, width and shelf spacing to suit your needs. Keep in mind, though, that extending the width of the cabinet may require the addition of central shelf supports.',\n        estimatedTime: '12 hours',\n        materialsNeeded: '* 1/2 x 3/4 inch parting strip\\n* 1 x 2 common pine\\n* 1 x 4 common pine\\n* 1 x 10 common pine\\n* 1/4 inch thick lauan plywood\\n* Finishing Nails\\n* Sandpaper\\n* Wood Glue\\n* Wood Filler\\n* Minwax Oil Based Polyurethane\\n',\n        steps: [\n          {\n            stepNumber: 1,\n            title: 'Cutting the Parts',\n            description: 'For precise crosscuts, first make a simple, self-aligning T-guide for your circular saw. Cut a piece of 1/2-in. plywood to 2 1/2 x 24 in. and glue and screw it to a roughly 12-in.-long piece of 1 x 4 pine that will serve as the crossbar of the T. Center the plywood strip along the 1 x 4 and make sure the pieces are perfectly square to each other.\\n\\nButt the crossbar of the T-guide against the edge of a piece of scrap lumber, tack the guide in place and make a cut through the 1 x 4 with your saw base guided by the plywood strip. Then, trim the 1 x 4 on the opposite side in the same way. Now, the ends of the 1 x 4 can be aligned with layout lines on the stock for precise cut positioning.\\n\\nBegin construction by using a tape measure to mark the length of a side panel on 1 x 10 stock, and lay out the cut line with a square. The side panels on our bookcase are 48 in. long.'\n          },\n          {\n            stepNumber: 2,\n            title: 'Blah Blah Blah',\n            description: 'And some other stuff...'\n          }\n        ],\n        overallRating: 4,\n        reviews: [\n          {\n            _id: 1,\n            user: {\n              _id: 3,\n              fullName: 'Sam Smith'\n            },\n            postedOn: new Date('2016-02-01T21:54:00.000Z'),\n            rating: 5,\n            review: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n          },\n          {\n            _id: 2,\n            user: {\n              _id: 2,\n              fullName: 'Sam Jones'\n            },\n            postedOn: new Date('2016-02-04T21:22:00.000Z'),\n            rating: 3,\n            review: 'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n          }\n        ]\n      },\n      {\n        _id: 2,\n        user: {\n          _id: 1,\n          fullName: 'Joe Smith'\n        },\n        title: 'Learn How to Program',\n        description: 'In this course, you\\'ll learn how to write code like a pro!',\n        estimatedTime: '6 hours',\n        materialsNeeded: '* Notebook computer running Mac OS X or Windows\\n* Text editor',\n        steps: [\n          {\n            stepNumber: 1,\n            title: 'Blah Blah Blah',\n            description: 'And some stuff...'\n          },\n          {\n            stepNumber: 2,\n            title: 'Blah Blah Blah',\n            description: 'And some other stuff...'\n          }\n        ],\n        overallRating: 5,\n        reviews: [\n          {\n            _id: 3,\n            user: {\n              _id: 3,\n              fullName: 'Sam Smith'\n            },\n            postedOn: new Date('2016-02-04T21:22:00.000Z'),\n            rating: 5,\n            review: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n          }\n        ]\n      }\n    ]\n  };\n\n  this.getCourses = function() {\n    return prepareContent(coursesData);\n  };\n\n  this.getCourse = function(id) {\n    var course = findCourse(id);\n    var returnValue = null;\n    \n    if (course) {\n      returnValue = { data: [ course ] };\n      return prepareContent(returnValue);\n    } else {\n      return $q.reject({ data: null, status: 404 });\n    }\n  };\n\n  this.createCourse = function(course) {\n    var validationErrors = validationService.getValidationErrorsObject();\n\n    // validate the course\n    validateCourse(course, validationErrors);\n\n    // if we have validation errors, then short circuit this process\n    if (validationService.hasValidationErrors(validationErrors)) {\n      return validationService.prepareErrorResponse(validationErrors);\n    }\n\n    // determine and set the course id\n    course._id = coursesData.data.length + 1;\n\n    // add the course\n    coursesData.data.push(course);\n    \n    // return an empty promise\n    return prepareContent();\n  };\n\n  this.updateCourse = function(course) {\n    var validationErrors = validationService.getValidationErrorsObject();\n\n    // validate the course\n    validateCourse(course, validationErrors);\n\n    // if we have validation errors, then short circuit this process\n    if (validationService.hasValidationErrors(validationErrors)) {\n      return validationService.prepareErrorResponse(validationErrors);\n    }\n\n    // update the course\n    var courseIndex = _.findIndex(coursesData.data, function(c) {\n      return c._id == course._id;\n    });\n    coursesData.data[courseIndex] = course;\n    \n    // return an empty promise\n    return prepareContent();\n  };\n\n  this.createReview = function(courseId, review) {\n    var validationErrors = validationService.getValidationErrorsObject();\n\n    // validate the review\n    if (!review.rating) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'rating', 'Please provide a rating.');\n    }\n\n    // if we have validation errors, then short circuit this process\n    if (validationService.hasValidationErrors(validationErrors)) {\n      return validationService.prepareErrorResponse(validationErrors);\n    }\n\n    // set the posted on value to \"now\"\n    review.postedOn = new Date();\n\n    // set the user to the current user\n    var currentUser = sessionService.currentUser;\n    review.user = {\n      _id: currentUser._id,\n      fullName: currentUser.fullName\n    };\n\n    // determine and set the course id\n    var allReviews = getAllReviews();\n    review._id = allReviews.length + 1;\n\n    // find the course to add the review to\n    var course = findCourse(courseId);\n    if (!course) {\n      throw new Error('Unable to find course ID: ' + courseId);\n    }\n\n    // add the review\n    course.reviews.push(review);\n\n    // update the overall rating\n    course.overallRating = getOverallRating(course);\n    \n    // return an empty promise\n    return prepareContent();\n  };\n\n  this.deleteReview = function(courseId, id) {\n    // find the course\n    var course = findCourse(courseId);\n    if (!course) {\n      throw new Error('Unable to find course ID: ' + courseId);\n    }\n\n    // find the review to delete\n    var review = findCourseReview(course, id);\n    if (!review) {\n      throw new Error('Unable to find review ID: ' + id);\n    }\n\n    // delete the review\n    var indexToRemove = course.reviews.indexOf(review);\n    course.reviews.splice(indexToRemove, 1);\n\n    // update the overall rating\n    course.overallRating = getOverallRating(course);\n    \n    // return an empty promise\n    return prepareContent();\n  };\n  \n  function prepareContent(data) {\n    var content = null;\n    if (data) {\n      content = { data: data };\n    }\n    \n    return $q.resolve(content);\n  }\n\n  function validateCourse(course, validationErrors) {\n    if (!course.title) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'title', 'Please provide a course title.');\n    }\n    if (!course.description) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'description', 'Please provide a course description.');\n    }\n    if (course.steps.length === 0) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'steps', 'Please provide at least one step.');\n    } else {\n      course.steps.forEach(function(step, index) {\n        if (!step.title) {\n          validationService.addRequiredValidationError(\n            validationErrors, 'steps.' + index + '.title',\n            'Please provide a title for step #' + step.stepNumber + '.');\n        }\n        if (!step.description) {\n          validationService.addRequiredValidationError(\n            validationErrors, 'steps.' + index + '.description',\n            'Please provide a description for step #' + step.stepNumber + '.');\n        }\n      });\n    }\n  }\n\n  function getOverallRating(course) {\n    // if we don't have any reviews... then return '0'\n    if (!course.reviews.length) {\n      return 0;\n    }\n\n    // get an array of the rating values\n    var ratings = course.reviews.map(function(review) {\n      return review.rating;\n    });\n\n    // sum the rating values\n    var ratingSum = ratings.reduce(function(previous, current) {\n      return previous + current;\n    });\n\n    // determine the average (rounded to the nearest integer)\n    var ratingAverage = Math.round(ratingSum / course.reviews.length);\n\n    return ratingAverage;\n  }\n\n  function findCourse(id) {\n    var course = _.find(coursesData.data, function(course) {\n      return course._id == id;\n    });\n    return course;\n  }\n\n  function findCourseReview(course, id) {\n    var review = _.find(course.reviews, function(review) {\n      return review._id == id;\n    });\n    return review;\n  }\n\n  function getAllReviews() {\n    var reviews = [];\n    coursesData.data.forEach(function(course) {\n      reviews = reviews.concat(course.reviews);\n    });\n    return reviews;\n  }\n}\n\nmodule.exports = CoursesData;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./data/courses.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\n\nvar _ = require('underscore');\n\nfunction UsersData(sessionService, validationService, $q) {\n\n  var usersData = {\n    data: [\n      {\n        _id: 1,\n        fullName: 'Joe Smith',\n        emailAddress: 'joe@smith.com',\n        password: 'password'\n      },\n      {\n        _id: 2,\n        fullName: 'Sam Jones',\n        emailAddress: 'sam@jones.com',\n        password: 'password'\n      },\n      {\n        _id: 3,\n        fullName: 'Sam Smith',\n        emailAddress: 'sam@smith.com',\n        password: 'password'\n      }\n    ]\n  };\n\n  // the actual api service can only retrieve the user data for the current user\n  // so we model that behavior here by only supporting getting the user that\n  // matches the current user's email address and password\n  this.getUser = function() {\n    var currentUser = sessionService.currentUser;\n    var user = findUser(currentUser.emailAddress, currentUser.password);\n    var returnValue = null;\n\n    if (user) {\n      returnValue = { data: [ user ] };\n      return prepareContent(returnValue);\n    } else {\n      return $q.reject({ data: null, status: 404 });\n    }\n  };\n\n  this.createUser = function(user) {\n    var validationErrors = validationService.getValidationErrorsObject();\n\n    // validate the user\n    if (!user.fullName) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'fullName', 'Please provide a full name.');\n    }\n    if (!user.emailAddress) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'emailAddress', 'Please provide an email address.');\n    }\n    if (!user.password) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'password', 'Please provide a password.');\n    }\n    if (!user.confirmPassword) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'confirmPassword', 'Please confirm your password.');\n    }\n    if (user.password !== user.confirmPassword) {\n      validationService.addValidationError(\n        validationErrors, 'password', validationService.validationCodes.passwordMismatch,\n        'Your password and password confirmation do not match.');\n    }\n\n    // check for existing user\n    var existingUser = findUserByEmailAddress(user.emailAddress);\n    if (existingUser) {\n      validationService.addValidationError(\n        validationErrors, 'emailAddress', validationService.validationCodes.existingUser,\n        'We found an existing user for the provided email address. Please sign in using that email address or provide a different email address.');\n    }\n\n    // if we have validation errors, then short circuit this process\n    if (validationService.hasValidationErrors(validationErrors)) {\n      return validationService.prepareErrorResponse(validationErrors);\n    }\n\n    // determine and set the user id\n    user._id = usersData.data.length + 1;\n\n    // add the user\n    usersData.data.push(user);\n    \n    // return an empty promise\n    return prepareContent();\n  };\n\n  function prepareContent(data) {\n    var content = null;\n    if (data) {\n      content = { data: data };\n    }\n    \n    return $q.resolve(content);\n  }\n\n  function findUser(emailAddress, password) {\n    var user = _.find(usersData.data, function(user) {\n      // for now, let's allow for a case insensitive match on email address\n      // and a case sensitive match on password\n      return (\n        user.emailAddress.toLowerCase() === emailAddress.toLowerCase() &&\n        user.password === password);\n    });\n    return user;\n  }\n\n  function findUserByEmailAddress(emailAddress) {\n    var user = _.find(usersData.data, function(user) {\n      // for now, let's allow for a case insensitive match on email address\n      return user.emailAddress.toLowerCase() === emailAddress.toLowerCase();\n    });\n    return user;\n  }\n\n}\n\nmodule.exports = UsersData;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./data/users.js\n ** module id = 18\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\nvar app = angular.module('app');\n\napp.directive('markdown', require('./markdown'));\napp.directive('rating', require('./rating'));\napp.directive('userNav', require('./user-nav'));\napp.directive('validationErrors', require('./validation-errors'));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/index.js\n ** module id = 19\n ** module chunks = 0\n **/","'use strict';\n\n// this directive was inspired by this custom directive:\n// https://github.com/btford/angular-markdown-directive\nfunction Markdown($sanitize, showdownService) {\n  return {\n    restrict: 'A',\n    link: function (scope, element, attrs) {\n      if (attrs.markdown) {\n        var converter = showdownService.getConverter();\n        scope.$watch(attrs.markdown, function (newVal) {\n          var html = newVal ? $sanitize(converter.makeHtml(newVal)) : '';\n          element.html(html);\n        });\n      }\n    }\n  };\n}\n\nmodule.exports = Markdown;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/markdown.js\n ** module id = 20\n ** module chunks = 0\n **/","'use strict';\n\nfunction Rating() {\n  var controller = ['$scope', function($scope) {\n\n    $scope.$watch('value', function(newValue, oldValue) {\n      var valueAsNumber = 0;\n      if (newValue) {\n        valueAsNumber = parseInt(newValue);\n      }\n      $scope.valueAsNumber = valueAsNumber;\n    });\n\n    $scope.setRating = function(value) {\n      if ($scope.allowEdit) {\n        $scope.value = value;\n      }\n    };\n  }];\n\n  return {\n    restrict: 'E',\n    scope: {\n      value: '=',\n      isUserRating: '@',\n      allowEdit: '@'\n    },\n    controller: controller,\n    templateUrl: 'templates/rating.html'\n  }\n}\n\nmodule.exports = Rating;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/rating.js\n ** module id = 21\n ** module chunks = 0\n **/","'use strict';\n\nfunction UserNav() {\n  var controller = ['$scope', '$location', 'sessionService',\n    function($scope, $location, sessionService, authService) {\n      var currentUser = sessionService.currentUser;\n      $scope.isAuthenticated = currentUser.isAuthenticated;\n      $scope.fullName = currentUser.fullName;\n    }];\n\n  return {\n    restrict: 'E',\n    scope: {\n    },\n    controller: controller,\n    templateUrl: 'templates/user-nav.html'\n  }\n}\n\nmodule.exports = UserNav;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/user-nav.js\n ** module id = 22\n ** module chunks = 0\n **/","'use strict';\n\nfunction ValidationErrors() {\n  var controller = ['$scope', function($scope) {\n    $scope.$watch('errors', function(newValue, oldValue) {\n      var errorsToDisplay = [];\n\n      if (newValue) {\n        for (var key in newValue) {\n          if (newValue.hasOwnProperty(key)) {\n            errorsToDisplay = errorsToDisplay.concat(newValue[key]);\n          }\n        }\n      }\n\n      $scope.errorsToDisplay = errorsToDisplay;\n    });\n  }];\n\n  return {\n    restrict: 'E',\n    scope: {\n      errors: '='\n    },\n    controller: controller,\n    templateUrl: 'templates/validation-errors.html'\n  }\n}\n\nmodule.exports = ValidationErrors;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/validation-errors.js\n ** module id = 23\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nangular.module('app').filter('lineReturnsToParagraphs', require('./line-returns-to-paragraphs'));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./filters/index.js\n ** module id = 24\n ** module chunks = 0\n **/","'use strict';\n\nfunction LineReturnsToParagraphs() {\n  return function (input) {\n    if (input) {\n      return '<p>' + input.replace(/\\n\\n/g, '</p><p>') +'</p>';\n    } else {\n      return input;\n    }\n  }\n}\n\nmodule.exports = LineReturnsToParagraphs;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./filters/line-returns-to-paragraphs.js\n ** module id = 25\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\nvar app = angular.module('app');\n\napp.config(require('./config'));\n// NOTE `constants` is defined in the global namespace within the `index.html`\n// in order to make it as easy as possible for the student to change the values\napp.constant('constants', constants);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./init/index.js\n ** module id = 26\n ** module chunks = 0\n **/","'use strict';\n\nfunction config($httpProvider, $routeProvider) {\n  $httpProvider.interceptors.push('httpInterceptorService');\n\n  $routeProvider\n    .when('/', {\n      controller: 'CoursesController',\n      controllerAs: 'vm',\n      templateUrl: 'templates/courses.html'\n    })\n    .when('/detail/:id', {\n      controller: 'CourseDetailController',\n      controllerAs: 'vm',\n      templateUrl: 'templates/course-detail.html'\n    })\n    .when('/update/:id', {\n      controller: 'CourseEditController',\n      controllerAs: 'vm',\n      templateUrl: 'templates/course-edit.html',\n      requireLogin: true\n    })\n    .when('/create', {\n      controller: 'CourseEditController',\n      controllerAs: 'vm',\n      templateUrl: 'templates/course-edit.html',\n      requireLogin: true\n    })\n    .when('/signin', {\n      controller: 'SignInController',\n      controllerAs: 'vm',\n      templateUrl: 'templates/sign-in.html'\n    })\n    .when('/signout', {\n      controller: 'SignOutController',\n      controllerAs: 'vm',\n      templateUrl: 'templates/sign-out.html'\n    })\n    .when('/signup', {\n      controller: 'SignUpController',\n      controllerAs: 'vm',\n      templateUrl: 'templates/sign-up.html'\n    })\n    .otherwise({\n      redirectTo: '/'\n    });\n}\n\nmodule.exports = config;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./init/config.js\n ** module id = 27\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\n\nangular.module('app').provider('dataService', require('./data-service'));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./providers/index.js\n ** module id = 28\n ** module chunks = 0\n **/","'use strict';\n\nvar dataService = require('./data');\nvar mockDataService = require('./mock-data');\n\nfunction DataServiceProvider() {\n  \n  \n  this.$get = ['constants', 'coursesData', 'usersData', '$http', \n    function(constants, coursesData, usersData, $http) {\n      if (constants.useMockData) {\n        return new mockDataService(coursesData, usersData);\n      } else {\n        return new dataService($http);\n      }    \n  }];\n}\n\nmodule.exports = DataServiceProvider;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./providers/data-service.js\n ** module id = 29\n ** module chunks = 0\n **/","'use strict';\n\nfunction DataService($http) {\n\n  this.getUser = function() {\n    return $http.get('api/users');\n  };\n\n  this.createUser = function(user) {\n    return $http.post('api/users', user);\n  };\n\n  this.getCourses = function() {\n    return $http.get('api/courses');\n  };\n\n  this.getCourse = function(id) {\n    return $http.get('api/courses/' + id);\n  };\n\n  this.createCourse = function(course) {\n    return $http.post('api/courses', course);\n  };\n\n  this.updateCourse = function(course) {\n    return $http.put('api/courses/' + course._id, course);\n  };\n\n  this.createReview = function(courseId, review) {\n    return $http.post('api/courses/' + courseId + '/reviews', review);\n  };\n\n  this.deleteReview = function(courseId, id) {\n    return $http.delete('api/courses/' + courseId + '/reviews/' + id);\n  };\n\n}\n\nmodule.exports = DataService;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./providers/data.js\n ** module id = 30\n ** module chunks = 0\n **/","'use strict';\n\nfunction MockDataService(coursesData, usersData) {\n\n  this.getUser = function() {\n    return usersData.getUser();\n  };\n\n  this.createUser = function(user) {\n    return usersData.createUser(user);\n  };\n\n  this.getCourses = function() {\n    return coursesData.getCourses();\n  };\n\n  this.getCourse = function(id) {\n    return coursesData.getCourse(id);\n  };\n\n  this.createCourse = function(course) {\n    return coursesData.createCourse(course);\n  };\n\n  this.updateCourse = function(course) {\n    return coursesData.updateCourse(course);\n  };\n\n  this.createReview = function(courseId, review) {\n    return coursesData.createReview(courseId, review);\n  };\n\n  this.deleteReview = function(courseId, id) {\n    return coursesData.deleteReview(courseId, id);\n  };\n\n}\n\nmodule.exports = MockDataService;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./providers/mock-data.js\n ** module id = 31\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require('angular');\nvar app = angular.module('app');\n\napp.service('authService', require('./auth'));\napp.service('errorHandlerService', require('./error-handler'));\napp.service('httpInterceptorService', require('./http-interceptor'));\napp.service('sessionService', require('./session'));\napp.service('showdownService', require('./showdown'));\napp.service('toastService', require('./toast'));\napp.service('validationService', require('./validation'));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/index.js\n ** module id = 32\n ** module chunks = 0\n **/","'use strict';\n\nfunction AuthService(sessionService, validationService, dataService, $q) {\n  var _this = this;\n\n  _this.signIn = function(emailAddress, password) {\n    var validationErrors = validationService.getValidationErrorsObject();\n\n    // validate that we have an email address and password\n    if (!emailAddress) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'emailAddress', 'Please provide an email address.');\n    }\n    if (!password) {\n      validationService.addRequiredValidationError(\n        validationErrors, 'password', 'Please provide a password.');\n    }\n\n    // if we have validation errors, then short circuit this process\n    if (validationService.hasValidationErrors(validationErrors)) {\n      return validationService.prepareErrorResponse(validationErrors);\n    }\n\n    var currentUser = sessionService.currentUser;\n\n    // set the email address and password on the current user\n    // so that the data service has access to these values\n    currentUser.emailAddress = emailAddress;\n    currentUser.password = password;\n\n    // attempt to get the user from the data service\n    return dataService.getUser().then(\n      function(response) {\n        var user = response && response.data && response.data.data && response.data.data[0];\n\n        currentUser.isAuthenticated = true;\n        currentUser._id = user._id;\n        currentUser.fullName = user.fullName;\n\n        // return null to the caller indicating that there were no errors\n        return $q.resolve(null);\n      },\n      function(response) {\n        sessionService.resetSession();\n\n        // add a validation indicating that the login failed\n        validationService.addValidationError(\n          validationErrors, 'password',\n          validationService.validationCodes.loginFailure,\n          'The login failed for the provided email address and password.');\n\n        // return the validation errors to the caller\n        return validationService.prepareErrorResponse(validationErrors);\n      });\n  }\n\n  _this.signOut = function() {\n    sessionService.resetSession();\n  }\n}\n\nmodule.exports = AuthService;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/auth.js\n ** module id = 33\n ** module chunks = 0\n **/","'use strict';\n\nfunction ErrorHandler(toastService, $log) {\n  var _this = this;\n  \n  _this.handleError = function(response, displayValidationErrorsCallback) {\n    if (response.status === 400 && displayValidationErrorsCallback) {\n      displayValidationErrorsCallback(response.data);\n    } else {\n      var message = response && response.data && response.data.message;\n      if (!message) {\n        message = 'Message not available. Please see the console for more details.';\n      }\n      toastService.error(message, 'Unexpected Error');\n\n      // log the entire response to the console\n      $log.error(response);\n    }\n  };\n}\n\nmodule.exports = ErrorHandler;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/error-handler.js\n ** module id = 34\n ** module chunks = 0\n **/","'use strict';\n\nfunction HttpInterceptorService(sessionService, $log) {\n  this.request = function(config) {\n    var currentUser = sessionService.currentUser;\n    \n    if (currentUser && currentUser.emailAddress && currentUser.password) {\n      var authString = btoa(currentUser.emailAddress + ':' + currentUser.password);\n      var headers = config.headers;\n      headers['Authorization'] = 'Basic ' + authString;\n    }\n    \n    return config;\n  }\n}\n\nmodule.exports = HttpInterceptorService;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/http-interceptor.js\n ** module id = 35\n ** module chunks = 0\n **/","'use strict';\n\nfunction Session() {\n  var _this = this;\n\n  _this.currentUser = {};\n\n  _this.resetSession = function() {\n    _this.currentUser = {\n      isAuthenticated: false,\n      _id: 0,\n      fullName: '',\n      emailAddress: '',\n      password: ''\n    };\n  };\n\n  init();\n\n  function init() {\n    _this.resetSession();\n  }\n}\n\nmodule.exports = Session;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/session.js\n ** module id = 36\n ** module chunks = 0\n **/","'use strict';\n\nvar showdown = require('showdown');\n\nfunction ShowdownService() {\n\n  var options = {};\n  var showdownConverter = new showdown.Converter(options);\n\n  this.getConverter = function() {\n    return showdownConverter;\n  };\n\n}\n\nmodule.exports = ShowdownService;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/showdown.js\n ** module id = 37\n ** module chunks = 0\n **/","'use strict';\n\nvar toastr = require('toastr');\n\ntoastr.options = {\n  \"closeButton\": false,\n  \"debug\": false,\n  \"newestOnTop\": false,\n  \"progressBar\": false,\n  \"positionClass\": \"toast-bottom-right\",\n  \"preventDuplicates\": false,\n  \"onclick\": null,\n  \"showDuration\": \"300\",\n  \"hideDuration\": \"1000\",\n  \"timeOut\": \"5000\",\n  \"extendedTimeOut\": \"1000\",\n  \"showEasing\": \"swing\",\n  \"hideEasing\": \"linear\",\n  \"showMethod\": \"fadeIn\",\n  \"hideMethod\": \"fadeOut\"\n}\n\nfunction ToastService() {\n  var _this = this;\n  \n  _this.success = function(message, title) {\n    toastr.success(message, title);\n  };\n\n  _this.info = function(message, title) {\n    toastr.info(message, title);\n  };\n\n  _this.warning = function(message, title) {\n    toastr.warning(message, title);\n  };\n\n  _this.error = function(message, title) {\n    toastr.error(message, title);\n  };\n}\n\nmodule.exports = ToastService;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/toast.js\n ** module id = 39\n ** module chunks = 0\n **/","'use strict';\n\nfunction ValidationService($q) {\n  var _this = this;\n\n  _this.validationCodes = {\n    required: 'required',\n    loginFailure: 'login_failure',\n    passwordMismatch: 'password_mismatch',\n    existingUser: 'existing_user'\n  };\n\n  _this.addRequiredValidationError = function(validationErrors, key, message) {\n    _this.addValidationError(validationErrors, key,\n      _this.validationCodes.required, message);\n  };\n\n  _this.addValidationError = function(validationErrors, key, code, message) {\n    if (!validationErrors.errors.hasOwnProperty(key)) {\n      validationErrors.errors[key] = [];\n    }\n\n    var error = {\n      code: code,\n      message: message\n    };\n\n    validationErrors.errors[key].push(error);\n  };\n\n  _this.hasValidationErrors = function(validationErrors) {\n    var hasValidationErrors = false;\n\n    for (var key in validationErrors.errors) {\n      if (validationErrors.errors.hasOwnProperty(key)) {\n        hasValidationErrors = true;\n        break;\n      }\n    }\n\n    return hasValidationErrors;\n  };\n\n  _this.getValidationErrorsObject = function() {\n    return {\n      message: 'Validation Failed',\n      errors: {}\n    };\n  };\n  \n  _this.prepareErrorResponse = function(validationErrors) {\n    return $q.reject({ data: validationErrors, status: 400 });\n  };\n}\n\nmodule.exports = ValidationService;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/validation.js\n ** module id = 43\n ** module chunks = 0\n **/"],"sourceRoot":""}